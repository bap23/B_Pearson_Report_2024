# Note: Script to identify the heritability of each MRI-derived brain phenotype - CT, SA, and GMV - at each timepoint (T0 and T1)

# Defined paths: 
path_gcta=/home/bp520/rds/hpc-work/Heritability_and_Co-Heritability
path_grm=${path_gcta}/GRM/unrelated_15k

# Check if GRM files exist
if [[ ! -f "${path_grm}.grm.bin" || ! -f "${path_grm}.grm.N.bin" || ! -f "${path_grm}.grm.id" ]]; then
    echo "One or more GRM files are missing. Please check the following files:"
    echo "${path_grm}.grm.bin"
    echo "${path_grm}.grm.N.bin"
    echo "${path_grm}.grm.id"
    exit 1
fi

# Initialize an array to store ROI names
roi_names=()

# Read the ROI names into an array
filename="$path_gcta/roi_names.txt"
while IFS= read -r line; do
    roi_names+=("$line")
done < "$filename"

# Directory containing the phenotype files
directory="$path_gcta/Phenotype"

# Paths to covariate files
cat_covar=/home/bp520/rds/hpc-work/Covariates/WMcovardiscrete_structural.txt
quant_covar=/home/bp520/rds/hpc-work/Covariates/WMqcovar.txt

# Get the list of files in these directories
files=($(ls $directory/*_T[01]_GCTA.txt))

# Print out the list of files found
echo "Phenotype files found:"
for f in "${files[@]}"; do
    echo "$f"
done

# Output path
path_output="$path_gcta/gcta_all_output/heritability"

# Create the output directory if it doesn't exist
mkdir -p "$path_output"
mkdir -p "$path_output/files_hsq"
mkdir -p "$path_output/files_log"
mkdir -p "$path_output/all_roi_results"

echo "About to start iterating through files"

# Loop to iterate through each file
for file in "${files[@]}"; do
    time_pt=$(basename "$file" .txt)
    echo "Processing file: $time_pt"

    # Define the output file for heritability results
    output_herit="$path_output/all_roi_results/herit_${time_pt}.txt"
    herit_log="$path_output/files_log/herit_${time_pt}"     
    herit_hsq="$path_output/files_hsq/herit_${time_pt}"

    # Create or overwrite the output file and add a header
    echo -e "Regions\tV(G)/Vp\tSE\tPval" > "$output_herit"
        
    # Loop through the ROIs
    for ((k=0; k<${#roi_names[@]}; k++)); do
        roi_name=${roi_names[$k]}
        echo "Processing ROI: $k - $roi_name"
                
        # Calculate heritability
        /home/bp520/rds/hpc-work/software/gcta-1.94.1-linux-kernel-3-x86_64/gcta64 \
            --grm "$path_grm" \
            --pheno "$file" \
            --mpheno $((k+1)) \
            --covar "$cat_covar" \
            --qcovar "$quant_covar" \
            --reml --out "$herit_hsq" \
            --grm-cutoff 0.05 > "$herit_log"

        if [[ $? -ne 0 ]]; then
            echo "GCTA failed for ROI: $roi_name in file: $file"
            continue
        fi  

        # Extract heritability values
        valueV=$(grep 'V(G)/Vp' "${herit_hsq}.hsq" | awk '{print $2}')
        valueSE=$(grep 'V(G)/Vp' "${herit_hsq}.hsq" | awk '{print $3}')
        Pvalue=$(grep 'Pval' "${herit_hsq}.hsq" | awk '{print $2}')
                
        # Append the ROI name and heritability value to the output file
        echo -e "${roi_names[$k]}\t${valueV}\t${valueSE}\t${Pvalue}" >> "$output_herit"

        # Indicate successful processing of ROI
        echo "Successfully processed ROI: $roi_name for file: $time_pt"
            
    done
done
